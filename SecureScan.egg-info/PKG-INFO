Metadata-Version: 2.1
Name: SecureScan
Version: 1.0.2
Summary: A private, secure service discovery protocol package
Home-page: https://github.com/AlistairRobinson/SecureScan
Author: Alistair Robinson
License: UNKNOWN
Description: # SecureScan
        
        Research has shown that the WiFi scanning procedure, or handshake, is insecure. SecureScan is a novel, high level protocol designed to facilitate WiFi scanning without compromising the privacy of a user or their device.
        
        ## Overview
        
         - `secure_scan`: Provides an interface by which the SecureScan protocol can be utilised at a very high level. Consists of `actors`, who communicate via `frames` of data. `AccessPoint` actors have the capacity to broad their public key via a `beacon`, or to respond to a `probe_request` with a valid `probe_response`. `Station` actors have the capacity to respond to `beacons` with a `probe_request` and verify the validity of a received `probe_response`. See `test` for example usage.
         - `protocol`: Provides a formal specification for the SecureScan protocol using a Secure Protocol THeorY (`.spthy`) supported by Tamarin, an open access protocol security formal model checker. Contains a specification for the protocol as well as lemmas which demonstrate (and prove) the protocol's correctness and security in a Dolev Yao formal model and demonstrate corresponding attacks or vulnerabilities in the current WiFi standard.
         - `simulation`: Provides a high level implementation of the protocol in Python, which performs analysis on WiFi traffic generated by both SecureScan and the current WiFi standard to quantify their security, privacy and efficiency. A Gaussian NB classifier is used to evaluate the privacy afforded to stations in the network based on their probe requests.
         - `plotter`: Given a set of results retrieved from `simulation`, provides an interface by which said results can be shown in meaningful graphs.
        
         ## Development
        
         The SecureScan protocol was developed as part of Alistair Robinson's third year dissertation in Computer Science at the University of Warwick DCS.
        
        
Platform: UNKNOWN
Classifier: Programming Language :: Python :: 3
Classifier: License :: OSI Approved :: MIT License
Classifier: Operating System :: OS Independent
Requires-Python: >=3.6
Description-Content-Type: text/markdown
